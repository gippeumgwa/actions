name: Probe current environment

on:
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - run: apt list --installed
      - run: apt list --installed | grep -v automatic
      - run: ls /home/linuxbrew/.linuxbrew/Cellar/
      - name: path of some commands
        run: |
          whereis helm ant gradle lerna maven sbt ansible apt-fast azcopy bazel \
            java bazelisk bicep buildah cmake docker docker-compose fastlane haveged heroku heroku-cli \
            hhvm kubectl kustomize leningen mediainfo mercurial minikube n newman nvm parcel \
            podman polumi r skeopeo svn terraform-cli yamllint yq zstd \
            alibaba{,-}{,cloud}{,-cli} aws-cli gh gcloud hub netlify{,-cli} openshift \
            oras vercel {google-,}chrome{,-stable,.canary} firefox
          echo "$ANDROID_SDK_ROOT" "$CONDA" "$SELENIUM_JAR_PATH" "$NVM_DIR"
      - run: df -h
      - name: Build (patched) btrfs-convert
        continue-on-error: true
        if: 'failure()'
        run: |
          sudo apt update
          sudo apt install -y libudev-dev liblzo2-dev uuid-dev libblkid-dev comerr-dev libext2fs-dev automake
          git clone https://github.com/kdave/btrfs-progs
          cd btrfs-progs
          git checkout v5.16
          wget -qO- https://bit.ly/32EBYVO | git apply -
          ./autogen.sh
          ./configure C{C,XX}FLAGS='-static -I/usr/include/' PKG_CONFIG_PATH=/usr/lib/x86_64-linux-gnu/pkgconfig/ \
            --with-convert --enable-static --disable-{documentation,shared,zoned,libudev,zstd}
          make -j8 btrfs-convert
          sudo rm -f /usr/bin/btrfs-convert || true
          sudo mv btrfs-convert /usr/bin/
      - name: Attempt making more space
        continue-on-error: true
        if: 'failure()'
        run: |
          mount
          sudo swapoff -a
          export TMPDSK="$(findmnt /mnt | tail -n1 | awk '{ print $2 }' | sed -E 's/[0-9]+$//')"
          export MAINDSK="$(findmnt / | tail -n1 | awk '{ print $2 }' | sed -E 's/[0-9]+$//')"
          sudo umount /boot/efi /mnt
          sudo wipefs "$TMPDSK"1 "$TMPDSK" "$MAINDSK"15
          TESTLO="$(sudo losetup -f)"
          sudo losetup $TESTLO "$MAINDSK"1
          sudo dmesg -w &
          for I in $(sed 3) ; do sync ; echo 3 | sudo tee /proc/sys/vm/drop_caches ; done || true
          sudo timeout 60 e2fsck -fy $TESTLO || true
          sudo btrfs-convert "$MAINDSK"1
          sudo losetup -d $TESTLO
          # sudo btrfstune -U 39bd9ac9-1b8c-487c-85b0-5b4726f12ada "$MAINDSK"1
          sudo mount / -t btrfs -o remount
          sudo btrfs subvol del /ext2_saved
          sudo btrfs dev add "$TMPDSK" "$MAINDSK"15 .
          sudo btrfs fi us /
      - name: Erase everything unnessesarily eating much space
        continue-on-error: true
        run: |
          wget https://github.com/ZZROTDesign/docker-clean/raw/master/docker-clean -O docker-clean
          curl -L https://raw.githubusercontent.com/tj/n/master/bin/n -o n
          chmod a+x docker-clean n
          sudo ./docker-clean all
          yes | sudo ./n uninstall
          sudo systemctl stop docker.service snapd.service snapd.socket
          sudo umount -l /snap/*/*/ || true
          sudo rm -rf docker-clean n /usr/share/dotnet/ /usr/lib/mono/ \
            "$ANDROID_SDK_ROOT" /opt/hostedtoolcache/ /var/lib/docker/ \
            "$CONDA" "$SELENIUM_JAR_PATH" "$NVM_DIR" btrfs-progs/ \
            /var/lib/snapd/ /snap/ /usr/local/ /usr/share/kotlinc || true
          sudo mkdir -p /usr/local/
          sudo apt autoremove -y firefox google-chrome-stable build-essential \
            *dotnet* g{cc,++} *libboost* gfortran* google-cloud-sdk gnupg* \
            hhvm  fuse-overlayfs gh git-lfs git-ftp *dotnet* *aspnetcore* aria2 \
            brotli *mono* *clang* php* r-* skopeo mediainfo moby-* mongodb-* \
            mysql-* p7zip* nginx apache2 openjdk-* adoptopenjdk-* temurin-* \
            ant* snapd libudev-dev liblzo2-dev uuid-dev libblkid-dev comerr-dev \
            libext2fs-dev automake esl-erlang || true
      - run: df -h
      - run: python3 -V
